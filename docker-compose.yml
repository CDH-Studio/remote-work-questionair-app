version: "3.5"
services:
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./services/frontend:/frontend
      - frontend-data:/frontend/node_modules
    env_file:
      - ./env/web.env
    stdin_open: true

  backend:
    container_name: backend
    image: backend
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080 # port backend API
    volumes:
      - ./services/backend:/backend
      - backend-data:/backend/node_modules
    env_file:
      - ./env/backend.env
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:12-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: api
      POSTGRES_USER: api
      POSTGRES_DB: testdb

networks:
  default:
    name: remote-app-network

volumes:
  postgres-data:
    name: postgres-data
  backend-data:
    name: backend-data
  frontend-data:
    name: frontend-data
